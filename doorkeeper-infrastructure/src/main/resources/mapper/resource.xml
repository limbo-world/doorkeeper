<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2020-2024 Limbo Team (https://github.com/limbo-world).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ 	http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissionAggregates and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.limbo.doorkeeper.infrastructure.dao.mybatis.mapper.ResourceMapper" >

    <resultMap id="BaseResult" type="org.limbo.doorkeeper.infrastructure.po.ResourcePO">
        <result column="resource_id" property="resourceId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="realm_id" property="realmId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="client_id" property="clientId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="name" property="name" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="description" property="description" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="is_enabled" property="isEnabled" jdbcType="BIT" javaType="java.lang.Boolean"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
    </resultMap>

    <resultMap id="ResourceVO" type="org.limbo.doorkeeper.api.dto.vo.ResourceVO" extends="BaseResult">
        <collection property="tags" columnPrefix="tag_" resultMap="ResourceTagVO" />
        <collection property="uris" columnPrefix="uri_" resultMap="ResourceUriVO" />
        <collection property="parentIds" columnPrefix="parent_" ofType="java.lang.Long">
            <id column="id" />
        </collection>
        <collection property="childIds" columnPrefix="child_" ofType="java.lang.Long">
            <id column="id" />
        </collection>
    </resultMap>

    <resultMap id="ResourceTagVO" type="org.limbo.doorkeeper.api.dto.vo.ResourceTagVO">
        <result column="resource_tag_id" property="resourceTagId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="resource_id" property="resourceId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="k" property="k" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="v" property="v" jdbcType="VARCHAR" javaType="java.lang.String" />
    </resultMap>

    <resultMap id="ResourceUriVO" type="org.limbo.doorkeeper.api.dto.vo.ResourceUriVO">
        <result column="resource_uri_id" property="resourceUriId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="resource_id" property="resourceId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="uri" property="uri" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="method" property="method" jdbcType="VARCHAR" javaType="java.lang.String" />
    </resultMap>

    <sql id="queryCondition">
        and r.realm_id = #{realmId} and r.client_id = #{clientId}
        <if test="resourceIds != null and resourceIds.size() > 0">
            and r.resource_id in (
            <foreach collection="resourceIds" separator="," item="resourceId">
                #{resourceId}
            </foreach>
            )
        </if>
        <if test="names != null and names.size() > 0">
            and r.name in (
            <foreach collection="names" separator="," item="name">
                #{name}
            </foreach>
            )
        </if>
        <if test="dimName != null and dimName != ''">
            <bind name="dimName" value="'%' + dimName + '%'"/>
            and r.name like #{dimName}
        </if>
        <if test="isEnabled != null">
            and r.is_enabled = #{isEnabled}
        </if>
        <!-- uri相关 -->
        <if test="uris != null and uris.size() > 0">
            and exists (select resource_uri_id from resource_uri ru where ru.resource_id = r.resource_id
                and ru.uri in (
                    select uri_id from uri where realm_id = #{realmId} and client_id = #{clientId} and uri in (
                        <foreach collection="uris" separator="," item="uri">
                            #{uri}
                        </foreach>
                    )
                )
            )
        </if>
        <if test="dimUri != null and dimUri != ''">
            <bind name="dimUri" value="'%' + dimUri + '%'"/>
            and exists (select resource_uri_id from resource_uri ru where ru.resource_id = r.resource_id
                and ru.uri_id in (select uri_id from uri where realm_id = #{realmId} and client_id = #{clientId} and uri like #{dimUri})
            )
        </if>
        <!-- 标签相关 -->
        <if test="orKvs != null and orKvs.size() > 0">
            and exists (select resource_tag_id from resource_tag rt where rt.resource_id = r.resource_id
                and rt.tag_id in (
                    select tag_id from tag where realm_id = #{realmId} and client_id = #{clientId}
                    and kv in (
                        <foreach collection="orKvs" separator="," item="kv">
                            #{kv}
                        </foreach>
                    )
                )
            )
        </if>
        <if test="andKvs != null and andKvs.size() > 0">
            <foreach collection="andKvs" item="kv">
                and exists (select resource_tag_id from resource_tag rt where rt.resource_id = r.resource_id
                    and rt.tag_id = (
                        select tag_id from tag where realm_id = #{realmId} and client_id = #{clientId} and kv = #{kv}
                    )
                )
            </foreach>
        </if>
        <if test="k != null and k != ''">
            and exists (select resource_tag_id from resource_tag rt where rt.resource_id = r.resource_id
                and rt.tag_id in (select tag_id from tag where realm_id = #{realmId} and client_id = #{clientId} and k = #{k})
            )
        </if>
        <if test="dimK != null and dimK != ''">
            <bind name="dimK" value="'%' + dimK + '%'"/>
            and exists (select resource_tag_id from resource_tag rt where rt.resource_id = r.resource_id
                and rt.tag_id in (select tag_id from tag where realm_id = #{realmId} and client_id = #{clientId} and k like #{dimK})
            )
        </if>
        <if test="v != null and v != ''">
            and exists (select resource_tag_id from resource_tag rt where rt.resource_id = r.resource_id
                and rt.tag_id in (select tag_id from tag where realm_id = #{realmId} and client_id = #{clientId} and v = #{v})
            )
        </if>
        <if test="dimV != null and dimV != ''">
            <bind name="dimV" value="'%' + dimV + '%'"/>
            and exists (select resource_tag_id from resource_tag rt where rt.resource_id = r.resource_id
                and rt.tag_id in (select tag_id from tag where realm_id = #{realmId} and client_id = #{clientId} and v like #{dimV})
            )
        </if>
    </sql>
    <select id="voCount" resultType="java.lang.Long">
        select count(*)
        from resource r
        <where>
            <include refid="queryCondition" />
        </where>
    </select>
    <select id="getVOS" resultMap="ResourceVO">
        select r.*
        <if test="needTag == true">
            ,rt.resource_tag_id as tag_resource_tag_id, rt.resource_id as tag_resource_id, t.k as tag_k, t.v as tag_v
        </if>
        <if test="needUri == true">
            ,ru.resource_uri_id as uri_resource_uri_id, ru.resource_id as uri_resource_id, u.uri as uri_uri, u.method as uri_method
        </if>
        <if test="needParentId == true">
            ,rap.parent_id as parent_id
        </if>
        <if test="needChildrenId == true">
            ,rac.resource_id as child_id
        </if>
        from resource r
        <if test="needTag == true">
            left join resource_tag rt on rt.resource_id = r.resource_id
            left join tag t on t.tag_id = rt.tag_id
        </if>
        <if test="needUri == true">
            left join resource_uri ru on ru.resource_id = r.resource_id
            left join uri u on u.uri_id = ru.uri_id
        </if>
        <if test="needParentId == true">
            left join resource_association rap on rap.resource_id = r.resource_id
        </if>
        <if test="needChildrenId == true">
            left join resource_association rac on rac.parent_id = r.resource_id
        </if>
        where r.resource_id in (
            select * from (
                select r.resource_id from resource r
                <where>
                    <include refid="queryCondition" />
                </where>
                <if test="needAll != true">
                    order by r.resource_id desc
                    limit #{offset}, #{size}
                </if>
            ) tmp
        )
    </select>

    <select id="getVO" resultMap="ResourceVO">
        select r.*,
        rt.resource_tag_id as tag_resource_tag_id, rt.resource_id as tag_resource_id, t.k as tag_k, t.v as tag_v,
        ru.resource_uri_id as uri_resource_uri_id, ru.resource_id as uri_resource_id, u.uri as uri_uri, u.method as uri_method
        from resource r
        left join resource_tag rt on rt.resource_id = r.resource_id
        left join resource_uri ru on ru.resource_id = r.resource_id
        left join tag t on t.tag_id = rt.tag_id
        left join uri u on u.uri_id = ru.uri_id
        where r.realm_id = #{realmId} and r.client_id = #{clientId} and r.resource_id = #{resourceId}
    </select>

</mapper>
