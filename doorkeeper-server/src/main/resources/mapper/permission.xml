<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2020-2024 Limbo Team (https://github.com/limbo-world).
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ 	http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.limbo.doorkeeper.infrastructure.dao.mybatis.PermissionMapper" >

    <resultMap id="BaseResult" type="org.limbo.doorkeeper.infrastructure.po.PermissionPO">
        <result column="permission_id" property="permissionId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="realm_id" property="realmId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="client_id" property="clientId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="name" property="name" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="description" property="description" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="logic" property="logic" jdbcType="VARCHAR" javaType="org.limbo.doorkeeper.api.constants.Logic" />
        <result column="intention" property="intention" jdbcType="VARCHAR" javaType="org.limbo.doorkeeper.api.constants.Intention" />
        <result column="is_enabled" property="isEnabled" jdbcType="BIT" javaType="java.lang.Boolean"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
    </resultMap>

    <resultMap id="PermissionVO" type="org.limbo.doorkeeper.api.dto.vo.PermissionVO" extends="BaseResult">
        <result column="logic" property="logic" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="intention" property="intention" jdbcType="VARCHAR" javaType="java.lang.String" />
        <collection property="policies" columnPrefix="policy_" resultMap="PermissionPolicyVO" />
        <collection property="resources" columnPrefix="resource_" resultMap="PermissionResourceVO" />
    </resultMap>

    <resultMap id="PermissionPolicyVO" type="org.limbo.doorkeeper.api.dto.vo.PermissionPolicyVO">
        <result column="permission_policy_id" property="permissionPolicyId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="permission_id" property="permissionId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="policy_id" property="policyId" jdbcType="BIGINT" javaType="java.lang.Long" />
    </resultMap>

    <resultMap id="PermissionResourceVO" type="org.limbo.doorkeeper.api.dto.vo.PermissionResourceVO">
        <result column="permission_resource_id" property="permissionResourceId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="permission_id" property="permissionId" jdbcType="BIGINT" javaType="java.lang.Long" />
        <result column="resource_id" property="resourceId" jdbcType="BIGINT" javaType="java.lang.Long" />
    </resultMap>

    <sql id="queryCondition">
        and p.realm_id = #{realmId} and p.client_id = #{clientId}
        <if test="permissionIds != null and permissionIds.size() > 0">
            and p.permission_id in (
            <foreach collection="permissionIds" separator="," item="permissionId">
                #{permissionId}
            </foreach>
            )
        </if>
        <if test="names != null and names.size() > 0">
            and p.name in (
            <foreach collection="names" separator="," item="name">
                #{name}
            </foreach>
            )
        </if>
        <if test="dimName != null and dimName != ''">
            <bind name="dimName" value="'%' + dimName + '%'"/>
            and p.name like #{dimName}
        </if>
        <if test="logic != null and logic != ''">
            and p.logic = #{logic}
        </if>
        <if test="intention != null and intention != ''">
            and p.intention = #{intention}
        </if>
        <if test="isEnabled != null">
            and p.is_enabled = #{isEnabled}
        </if>
    </sql>
    <select id="voCount" resultType="java.lang.Long">
        select count(*)
        from permission p
        <where>
            <include refid="queryCondition"></include>
        </where>
    </select>
    <select id="getVOS" resultMap="PermissionVO">
        select p.*,
        pp.permission_policy_id as policy_permission_policy_id, pp.policy_id as policy_policy_id,
        pr.permission_resource_id as resource_permission_resource_id, pr.resource_id as resource_resource_id
        from permission p
        left join permission_policy pp on pp.permission_id = p.permission_id
        left join permission_resource pr on pr.permission_id = p.permission_id
        where p.permission_id in (
            select * from (
                select p.permission_id from permission p
                <where>
                    <include refid="queryCondition"></include>
                </where>
                <if test="needAll != true">
                    order by p.permission_id desc
                    limit #{offset}, #{size}
                </if>
            ) tmp
        )
    </select>

    <select id="getVO" resultMap="PermissionVO">
        select p.*,
        pp.permission_policy_id as policy_permission_policy_id, pp.policy_id as policy_policy_id,
        pr.permission_resource_id as resource_permission_resource_id, pr.resource_id as resource_resource_id
        from permission p
        left join permission_policy pp on pp.permission_id = p.permission_id
        left join permission_resource pr on pr.permission_id = p.permission_id
        where p.realm_id = #{realmId} and p.client_id = #{clientId} and p.permission_id = #{permissionId}
    </select>

</mapper>
